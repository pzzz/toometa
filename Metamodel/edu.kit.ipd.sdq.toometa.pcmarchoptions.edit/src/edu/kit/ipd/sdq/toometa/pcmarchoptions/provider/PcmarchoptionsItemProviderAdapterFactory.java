/**
 */
package edu.kit.ipd.sdq.toometa.pcmarchoptions.provider;

import de.uka.ipd.sdq.dsexplore.qml.dimensiontypes.DimensionTypeScale;
import de.uka.ipd.sdq.dsexplore.qml.dimensiontypes.DimensiontypesPackage;

import de.uka.ipd.sdq.dsexplore.qml.dimensiontypes.util.DimensiontypesSwitch;

import edu.kit.ipd.sdq.toometa.options.OptionRepository;
import edu.kit.ipd.sdq.toometa.options.OptionsPackage;

import edu.kit.ipd.sdq.toometa.options.util.OptionsSwitch;

import edu.kit.ipd.sdq.toometa.pcmarchoptions.PcmarchoptionsFactory;
import edu.kit.ipd.sdq.toometa.pcmarchoptions.PcmarchoptionsPackage;

import edu.kit.ipd.sdq.toometa.pcmarchoptions.util.PcmarchoptionsAdapterFactory;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;

import org.eclipse.emf.common.util.ResourceLocator;

import org.eclipse.emf.ecore.EObject;

import org.eclipse.emf.edit.command.CommandParameter;

import org.eclipse.emf.edit.domain.EditingDomain;

import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ChildCreationExtenderManager;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IChildCreationExtender;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class PcmarchoptionsItemProviderAdapterFactory extends PcmarchoptionsAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable, IChildCreationExtender {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This helps manage the child creation extenders.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ChildCreationExtenderManager childCreationExtenderManager = new ChildCreationExtenderManager(PcmarchoptionsEditPlugin.INSTANCE, PcmarchoptionsPackage.eNS_URI);

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public PcmarchoptionsItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_SplitComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_SplitComponentItemProvider pcM_SplitComponentItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_SplitComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_SplitComponentAdapter() {
		if (pcM_SplitComponentItemProvider == null) {
			pcM_SplitComponentItemProvider = new PCM_SplitComponentItemProvider(this);
		}

		return pcM_SplitComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_AllocateTogether} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_AllocateTogetherItemProvider pcM_AllocateTogetherItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_AllocateTogether}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_AllocateTogetherAdapter() {
		if (pcM_AllocateTogetherItemProvider == null) {
			pcM_AllocateTogetherItemProvider = new PCM_AllocateTogetherItemProvider(this);
		}

		return pcM_AllocateTogetherItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_NeverAllocateToSpecificNodes} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_NeverAllocateToSpecificNodesItemProvider pcM_NeverAllocateToSpecificNodesItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_NeverAllocateToSpecificNodes}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_NeverAllocateToSpecificNodesAdapter() {
		if (pcM_NeverAllocateToSpecificNodesItemProvider == null) {
			pcM_NeverAllocateToSpecificNodesItemProvider = new PCM_NeverAllocateToSpecificNodesItemProvider(this);
		}

		return pcM_NeverAllocateToSpecificNodesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_IntroduceNewAdapter} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_IntroduceNewAdapterItemProvider pcM_IntroduceNewAdapterItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_IntroduceNewAdapter}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_IntroduceNewAdapterAdapter() {
		if (pcM_IntroduceNewAdapterItemProvider == null) {
			pcM_IntroduceNewAdapterItemProvider = new PCM_IntroduceNewAdapterItemProvider(this);
		}

		return pcM_IntroduceNewAdapterItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_IntroduceNewComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_IntroduceNewComponentItemProvider pcM_IntroduceNewComponentItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_IntroduceNewComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_IntroduceNewComponentAdapter() {
		if (pcM_IntroduceNewComponentItemProvider == null) {
			pcM_IntroduceNewComponentItemProvider = new PCM_IntroduceNewComponentItemProvider(this);
		}

		return pcM_IntroduceNewComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_MoveComponents} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_MoveComponentsItemProvider pcM_MoveComponentsItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_MoveComponents}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_MoveComponentsAdapter() {
		if (pcM_MoveComponentsItemProvider == null) {
			pcM_MoveComponentsItemProvider = new PCM_MoveComponentsItemProvider(this);
		}

		return pcM_MoveComponentsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_OnlySingleInstantiation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_OnlySingleInstantiationItemProvider pcM_OnlySingleInstantiationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_OnlySingleInstantiation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_OnlySingleInstantiationAdapter() {
		if (pcM_OnlySingleInstantiationItemProvider == null) {
			pcM_OnlySingleInstantiationItemProvider = new PCM_OnlySingleInstantiationItemProvider(this);
		}

		return pcM_OnlySingleInstantiationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_ChangeRoles} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_ChangeRolesItemProvider pcM_ChangeRolesItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_ChangeRoles}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_ChangeRolesAdapter() {
		if (pcM_ChangeRolesItemProvider == null) {
			pcM_ChangeRolesItemProvider = new PCM_ChangeRolesItemProvider(this);
		}

		return pcM_ChangeRolesItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_AllocateNeverTogether} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_AllocateNeverTogetherItemProvider pcM_AllocateNeverTogetherItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_AllocateNeverTogether}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_AllocateNeverTogetherAdapter() {
		if (pcM_AllocateNeverTogetherItemProvider == null) {
			pcM_AllocateNeverTogetherItemProvider = new PCM_AllocateNeverTogetherItemProvider(this);
		}

		return pcM_AllocateNeverTogetherItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_MultipleInstantiation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_MultipleInstantiationItemProvider pcM_MultipleInstantiationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_MultipleInstantiation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_MultipleInstantiationAdapter() {
		if (pcM_MultipleInstantiationItemProvider == null) {
			pcM_MultipleInstantiationItemProvider = new PCM_MultipleInstantiationItemProvider(this);
		}

		return pcM_MultipleInstantiationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_BanComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_BanComponentItemProvider pcM_BanComponentItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_BanComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_BanComponentAdapter() {
		if (pcM_BanComponentItemProvider == null) {
			pcM_BanComponentItemProvider = new PCM_BanComponentItemProvider(this);
		}

		return pcM_BanComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_MultipleAllocation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_MultipleAllocationItemProvider pcM_MultipleAllocationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_MultipleAllocation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_MultipleAllocationAdapter() {
		if (pcM_MultipleAllocationItemProvider == null) {
			pcM_MultipleAllocationItemProvider = new PCM_MultipleAllocationItemProvider(this);
		}

		return pcM_MultipleAllocationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_ProvidedFunctionality} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_ProvidedFunctionalityItemProvider pcM_ProvidedFunctionalityItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_ProvidedFunctionality}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_ProvidedFunctionalityAdapter() {
		if (pcM_ProvidedFunctionalityItemProvider == null) {
			pcM_ProvidedFunctionalityItemProvider = new PCM_ProvidedFunctionalityItemProvider(this);
		}

		return pcM_ProvidedFunctionalityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_ReplaceComponents} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_ReplaceComponentsItemProvider pcM_ReplaceComponentsItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_ReplaceComponents}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_ReplaceComponentsAdapter() {
		if (pcM_ReplaceComponentsItemProvider == null) {
			pcM_ReplaceComponentsItemProvider = new PCM_ReplaceComponentsItemProvider(this);
		}

		return pcM_ReplaceComponentsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_ReuseComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_ReuseComponentItemProvider pcM_ReuseComponentItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_ReuseComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_ReuseComponentAdapter() {
		if (pcM_ReuseComponentItemProvider == null) {
			pcM_ReuseComponentItemProvider = new PCM_ReuseComponentItemProvider(this);
		}

		return pcM_ReuseComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_FunctionalityConnection} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_FunctionalityConnectionItemProvider pcM_FunctionalityConnectionItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_FunctionalityConnection}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_FunctionalityConnectionAdapter() {
		if (pcM_FunctionalityConnectionItemProvider == null) {
			pcM_FunctionalityConnectionItemProvider = new PCM_FunctionalityConnectionItemProvider(this);
		}

		return pcM_FunctionalityConnectionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_MergeComponents} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_MergeComponentsItemProvider pcM_MergeComponentsItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_MergeComponents}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_MergeComponentsAdapter() {
		if (pcM_MergeComponentsItemProvider == null) {
			pcM_MergeComponentsItemProvider = new PCM_MergeComponentsItemProvider(this);
		}

		return pcM_MergeComponentsItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_OnlySingleAllocation} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_OnlySingleAllocationItemProvider pcM_OnlySingleAllocationItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_OnlySingleAllocation}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_OnlySingleAllocationAdapter() {
		if (pcM_OnlySingleAllocationItemProvider == null) {
			pcM_OnlySingleAllocationItemProvider = new PCM_OnlySingleAllocationItemProvider(this);
		}

		return pcM_OnlySingleAllocationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_RequiredFunctionality} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_RequiredFunctionalityItemProvider pcM_RequiredFunctionalityItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_RequiredFunctionality}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_RequiredFunctionalityAdapter() {
		if (pcM_RequiredFunctionalityItemProvider == null) {
			pcM_RequiredFunctionalityItemProvider = new PCM_RequiredFunctionalityItemProvider(this);
		}

		return pcM_RequiredFunctionalityItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_ChangeDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_ChangeDataTypeItemProvider pcM_ChangeDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_ChangeDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_ChangeDataTypeAdapter() {
		if (pcM_ChangeDataTypeItemProvider == null) {
			pcM_ChangeDataTypeItemProvider = new PCM_ChangeDataTypeItemProvider(this);
		}

		return pcM_ChangeDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_IntroduceNewDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_IntroduceNewDataTypeItemProvider pcM_IntroduceNewDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_IntroduceNewDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_IntroduceNewDataTypeAdapter() {
		if (pcM_IntroduceNewDataTypeItemProvider == null) {
			pcM_IntroduceNewDataTypeItemProvider = new PCM_IntroduceNewDataTypeItemProvider(this);
		}

		return pcM_IntroduceNewDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_RemoveDataType} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_RemoveDataTypeItemProvider pcM_RemoveDataTypeItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_RemoveDataType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_RemoveDataTypeAdapter() {
		if (pcM_RemoveDataTypeItemProvider == null) {
			pcM_RemoveDataTypeItemProvider = new PCM_RemoveDataTypeItemProvider(this);
		}

		return pcM_RemoveDataTypeItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_IntroduceNewInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_IntroduceNewInterfaceItemProvider pcM_IntroduceNewInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_IntroduceNewInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_IntroduceNewInterfaceAdapter() {
		if (pcM_IntroduceNewInterfaceItemProvider == null) {
			pcM_IntroduceNewInterfaceItemProvider = new PCM_IntroduceNewInterfaceItemProvider(this);
		}

		return pcM_IntroduceNewInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_ChangeInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_ChangeInterfaceItemProvider pcM_ChangeInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_ChangeInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_ChangeInterfaceAdapter() {
		if (pcM_ChangeInterfaceItemProvider == null) {
			pcM_ChangeInterfaceItemProvider = new PCM_ChangeInterfaceItemProvider(this);
		}

		return pcM_ChangeInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_RemoveInterface} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_RemoveInterfaceItemProvider pcM_RemoveInterfaceItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_RemoveInterface}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_RemoveInterfaceAdapter() {
		if (pcM_RemoveInterfaceItemProvider == null) {
			pcM_RemoveInterfaceItemProvider = new PCM_RemoveInterfaceItemProvider(this);
		}

		return pcM_RemoveInterfaceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_AllocateComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_AllocateComponentItemProvider pcM_AllocateComponentItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_AllocateComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_AllocateComponentAdapter() {
		if (pcM_AllocateComponentItemProvider == null) {
			pcM_AllocateComponentItemProvider = new PCM_AllocateComponentItemProvider(this);
		}

		return pcM_AllocateComponentItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_AssembleComponent} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PCM_AssembleComponentItemProvider pcM_AssembleComponentItemProvider;

	/**
	 * This creates an adapter for a {@link edu.kit.ipd.sdq.toometa.pcmarchoptions.PCM_AssembleComponent}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPCM_AssembleComponentAdapter() {
		if (pcM_AssembleComponentItemProvider == null) {
			pcM_AssembleComponentItemProvider = new PCM_AssembleComponentItemProvider(this);
		}

		return pcM_AssembleComponentItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public List<IChildCreationExtender> getChildCreationExtenders() {
		return childCreationExtenderManager.getChildCreationExtenders();
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public Collection<?> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
		return childCreationExtenderManager.getNewChildDescriptors(object, editingDomain);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ResourceLocator getResourceLocator() {
		return childCreationExtenderManager;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (pcM_SplitComponentItemProvider != null) pcM_SplitComponentItemProvider.dispose();
		if (pcM_AllocateTogetherItemProvider != null) pcM_AllocateTogetherItemProvider.dispose();
		if (pcM_NeverAllocateToSpecificNodesItemProvider != null) pcM_NeverAllocateToSpecificNodesItemProvider.dispose();
		if (pcM_IntroduceNewAdapterItemProvider != null) pcM_IntroduceNewAdapterItemProvider.dispose();
		if (pcM_IntroduceNewComponentItemProvider != null) pcM_IntroduceNewComponentItemProvider.dispose();
		if (pcM_MoveComponentsItemProvider != null) pcM_MoveComponentsItemProvider.dispose();
		if (pcM_OnlySingleInstantiationItemProvider != null) pcM_OnlySingleInstantiationItemProvider.dispose();
		if (pcM_ChangeRolesItemProvider != null) pcM_ChangeRolesItemProvider.dispose();
		if (pcM_AllocateNeverTogetherItemProvider != null) pcM_AllocateNeverTogetherItemProvider.dispose();
		if (pcM_MultipleInstantiationItemProvider != null) pcM_MultipleInstantiationItemProvider.dispose();
		if (pcM_BanComponentItemProvider != null) pcM_BanComponentItemProvider.dispose();
		if (pcM_MultipleAllocationItemProvider != null) pcM_MultipleAllocationItemProvider.dispose();
		if (pcM_ProvidedFunctionalityItemProvider != null) pcM_ProvidedFunctionalityItemProvider.dispose();
		if (pcM_ReplaceComponentsItemProvider != null) pcM_ReplaceComponentsItemProvider.dispose();
		if (pcM_ReuseComponentItemProvider != null) pcM_ReuseComponentItemProvider.dispose();
		if (pcM_FunctionalityConnectionItemProvider != null) pcM_FunctionalityConnectionItemProvider.dispose();
		if (pcM_MergeComponentsItemProvider != null) pcM_MergeComponentsItemProvider.dispose();
		if (pcM_OnlySingleAllocationItemProvider != null) pcM_OnlySingleAllocationItemProvider.dispose();
		if (pcM_RequiredFunctionalityItemProvider != null) pcM_RequiredFunctionalityItemProvider.dispose();
		if (pcM_ChangeDataTypeItemProvider != null) pcM_ChangeDataTypeItemProvider.dispose();
		if (pcM_IntroduceNewDataTypeItemProvider != null) pcM_IntroduceNewDataTypeItemProvider.dispose();
		if (pcM_RemoveDataTypeItemProvider != null) pcM_RemoveDataTypeItemProvider.dispose();
		if (pcM_IntroduceNewInterfaceItemProvider != null) pcM_IntroduceNewInterfaceItemProvider.dispose();
		if (pcM_ChangeInterfaceItemProvider != null) pcM_ChangeInterfaceItemProvider.dispose();
		if (pcM_RemoveInterfaceItemProvider != null) pcM_RemoveInterfaceItemProvider.dispose();
		if (pcM_AllocateComponentItemProvider != null) pcM_AllocateComponentItemProvider.dispose();
		if (pcM_AssembleComponentItemProvider != null) pcM_AssembleComponentItemProvider.dispose();
	}

	/**
	 * A child creation extender for the {@link DimensiontypesPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class DimensiontypesChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends DimensiontypesSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public <T extends Number> Object caseDimensionTypeScale(DimensionTypeScale<T> object) {
				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_SplitComponent()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_AllocateTogether()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_NeverAllocateToSpecificNodes()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_IntroduceNewAdapter()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_IntroduceNewComponent()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_MoveComponents()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_OnlySingleInstantiation()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_ChangeRoles()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_AllocateNeverTogether()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_MultipleInstantiation()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_BanComponent()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_MultipleAllocation()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_ProvidedFunctionality()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_ReplaceComponents()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_ReuseComponent()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_FunctionalityConnection()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_MergeComponents()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_OnlySingleAllocation()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_RequiredFunctionality()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_ChangeDataType()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_IntroduceNewDataType()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_RemoveDataType()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_IntroduceNewInterface()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_ChangeInterface()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_RemoveInterface()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_AllocateComponent()));

				newChildDescriptors.add
					(createChildParameter
						(DimensiontypesPackage.Literals.DIMENSION_TYPE_SCALE__SCALE_ELEMENTS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_AssembleComponent()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return PcmarchoptionsEditPlugin.INSTANCE;
		}
	}

	/**
	 * A child creation extender for the {@link OptionsPackage}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public static class OptionsChildCreationExtender implements IChildCreationExtender {
		/**
		 * The switch for creating child descriptors specific to each extended class.
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		protected static class CreationSwitch extends OptionsSwitch<Object> {
			/**
			 * The child descriptors being populated.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected List<Object> newChildDescriptors;

			/**
			 * The domain in which to create the children.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected EditingDomain editingDomain;

			/**
			 * Creates the a switch for populating child descriptors in the given domain.
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			CreationSwitch(List<Object> newChildDescriptors, EditingDomain editingDomain) {
				this.newChildDescriptors = newChildDescriptors;
				this.editingDomain = editingDomain;
			}
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			@Override
			public Object caseOptionRepository(OptionRepository object) {
				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_SplitComponent()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_AllocateTogether()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_NeverAllocateToSpecificNodes()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_IntroduceNewAdapter()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_IntroduceNewComponent()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_MoveComponents()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_OnlySingleInstantiation()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_ChangeRoles()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_AllocateNeverTogether()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_MultipleInstantiation()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_BanComponent()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_MultipleAllocation()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_ProvidedFunctionality()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_ReplaceComponents()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_ReuseComponent()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_FunctionalityConnection()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_MergeComponents()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_OnlySingleAllocation()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_RequiredFunctionality()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_ChangeDataType()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_IntroduceNewDataType()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_RemoveDataType()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_IntroduceNewInterface()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_ChangeInterface()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_RemoveInterface()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_AllocateComponent()));

				newChildDescriptors.add
					(createChildParameter
						(OptionsPackage.Literals.OPTION_REPOSITORY__OPTIONS,
						 PcmarchoptionsFactory.eINSTANCE.createPCM_AssembleComponent()));

				return null;
			}
 
			/**
			 * <!-- begin-user-doc -->
			 * <!-- end-user-doc -->
			 * @generated
			 */
			protected CommandParameter createChildParameter(Object feature, Object child) {
				return new CommandParameter(null, feature, child);
			}

		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public Collection<Object> getNewChildDescriptors(Object object, EditingDomain editingDomain) {
			ArrayList<Object> result = new ArrayList<Object>();
			new CreationSwitch(result, editingDomain).doSwitch((EObject)object);
			return result;
		}

		/**
		 * <!-- begin-user-doc -->
		 * <!-- end-user-doc -->
		 * @generated
		 */
		public ResourceLocator getResourceLocator() {
			return PcmarchoptionsEditPlugin.INSTANCE;
		}
	}

}
